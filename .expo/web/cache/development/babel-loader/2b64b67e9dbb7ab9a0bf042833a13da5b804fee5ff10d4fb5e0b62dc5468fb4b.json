{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from \"./screens/Login\";\nimport Welcome from \"./screens/Welcome\";\nimport Info from \"./screens/Info\";\nimport { getUser } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoggedin = _React$useState2[0],\n    setIsLoggedin = _React$useState2[1];\n  React.useEffect(function () {\n    console.log(isLoggedin);\n    var func = function () {\n      var _ref = _asyncToGenerator(function* () {\n        console.log(yield getUser());\n        setIsLoggedin((yield getUser()) ? true : false);\n      });\n      return function func() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    func();\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Info\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: Welcome,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Info\",\n        component: Info,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","StatusBar","Image","StyleSheet","Text","View","DefaultTheme","NavigationContainer","createNativeStackNavigator","Login","Welcome","Info","getUser","jsx","_jsx","jsxs","_jsxs","Stack","App","_React$useState","useState","_React$useState2","_slicedToArray","isLoggedin","setIsLoggedin","useEffect","console","log","func","_ref","_asyncToGenerator","apply","arguments","children","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["/home/wamweru/dod_smart_home/dod_smart_home/application/App.js"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Image, StyleSheet, Text, View } from 'react-native';\nimport { DefaultTheme, NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from './screens/Login';\nimport Welcome from './screens/Welcome';\nimport Info  from './screens/Info';\nimport { getUser } from './helpers';\n\n\n\nconst Stack = createNativeStackNavigator()\n\n\n\nexport default function App() {\n  \n  const [isLoggedin, setIsLoggedin] = React.useState(false)\n  React.useEffect(()=>{\n    console.log(isLoggedin)\n    const func = async()=>{\n      console.log(await getUser())\n      setIsLoggedin(await getUser()? true: false)\n    }\n    func()\n  },\n  [])\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n      initialRouteName = 'Info'\n      >\n        \n        <Stack.Screen\n          name=\"Welcome\"\n          component={Welcome}\n          options={{\n            headerShown:false\n          }}\n          />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{\n            headerShown:false\n          }}\n          />\n\n        <Stack.Screen\n        name=\"Info\"\n        component={Info}\n        options={{\n          headerShown:false\n        }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,0BAA0B;AAC5E,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,KAAK;AACZ,OAAOC,OAAO;AACd,OAAOC,IAAI;AACX,SAASC,OAAO;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIpC,IAAMC,KAAK,GAAGT,0BAA0B,CAAC,CAAC;AAI1C,eAAe,SAASU,GAAGA,CAAA,EAAG;EAE5B,IAAAC,eAAA,GAAoCnB,KAAK,CAACoB,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAlDI,UAAU,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;EAChCrB,KAAK,CAACyB,SAAS,CAAC,YAAI;IAClBC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;IACvB,IAAMK,IAAI;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAS;QACpBJ,OAAO,CAACC,GAAG,OAAOf,OAAO,CAAC,CAAC,CAAC;QAC5BY,aAAa,CAAC,OAAMZ,OAAO,CAAC,CAAC,IAAE,IAAI,GAAE,KAAK,CAAC;MAC7C,CAAC;MAAA,gBAHKgB,IAAIA,CAAA;QAAA,OAAAC,IAAA,CAAAE,KAAA,OAAAC,SAAA;MAAA;IAAA,GAGT;IACDJ,IAAI,CAAC,CAAC;EACR,CAAC,EACD,EAAE,CAAC;EAEH,OACEd,IAAA,CAACP,mBAAmB;IAAA0B,QAAA,EAClBjB,KAAA,CAACC,KAAK,CAACiB,SAAS;MAChBC,gBAAgB,EAAG,MAAM;MAAAF,QAAA,GAGvBnB,IAAA,CAACG,KAAK,CAACmB,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAE5B,OAAQ;QACnB6B,OAAO,EAAE;UACPC,WAAW,EAAC;QACd;MAAE,CACD,CAAC,EAEJ1B,IAAA,CAACG,KAAK,CAACmB,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAE7B,KAAM;QACjB8B,OAAO,EAAE;UACPC,WAAW,EAAC;QACd;MAAE,CACD,CAAC,EAEJ1B,IAAA,CAACG,KAAK,CAACmB,MAAM;QACbC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAE3B,IAAK;QAChB4B,OAAO,EAAE;UACPC,WAAW,EAAC;QACd;MAAE,CACD,CAAC;IAAA,CACa;EAAC,CACC,CAAC;AAG1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}